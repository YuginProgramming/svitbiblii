import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';

dotenv.config();

/**
 * Debug script to test bot connection and basic functionality
 * Run with: node debug/botConnection.js
 */
async function testBotConnection() {
  try {
    console.log('ü§ñ BOT CONNECTION TEST');
    console.log('=======================');
    
    const token = process.env.TELEGRAM_BOT_TOKEN;
    if (!token) {
      console.error('‚ùå TELEGRAM_BOT_TOKEN not found in environment variables');
      return;
    }
    
    console.log('‚úÖ Bot token found');
    
    // Create bot instance
    const bot = new TelegramBot(token, { polling: false });
    
    // Test bot info
    console.log('\nüìã Testing bot info...');
    const botInfo = await bot.getMe();
    console.log('Bot info:', JSON.stringify(botInfo, null, 2));
    
    // Test set commands
    console.log('\n‚öôÔ∏è Testing command setup...');
    const commands = [
      { command: '/start', description: '–ü–æ—á–∞—Ç–∏ —á–∏—Ç–∞–Ω–Ω—è –ë—ñ–±–ª—ñ—ó' },
      { command: '/help', description: '–î–æ–ø–æ–º–æ–≥–∞ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó' },
      { command: '/toc', description: '–ó–º—ñ—Å—Ç –∫–Ω–∏–≥–∏' },
      { command: '/first', description: '–ü–µ—Ä—à–∏–π —Ä–æ–∑–¥—ñ–ª' }
    ];
    
    const setCommandsResult = await bot.setMyCommands(commands);
    console.log('Commands set successfully:', setCommandsResult);
    
    // Test menu button
    console.log('\nüçî Testing menu button...');
    const menuButtonResult = await bot.setChatMenuButton({
      menu_button: {
        type: 'commands',
        text: 'üìñ –ë—ñ–±–ª—ñ—è'
      }
    });
    console.log('Menu button set successfully:', menuButtonResult);
    
    console.log('\n‚úÖ All bot connection tests passed!');
    
  } catch (error) {
    console.error('‚ùå Bot connection test failed:', error.message);
    if (error.response) {
      console.error('Response details:', error.response.data);
    }
  }
}

testBotConnection();
